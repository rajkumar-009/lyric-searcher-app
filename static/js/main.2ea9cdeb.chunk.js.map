{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","res","data","message","body","catch","err","console","log","value","this","props","children","Component","Consumer","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","to","commontrack_id","Tracks","undefined","length","Spinner","Fragment","map","item","key","track_id","Search","trackTitle","findTrack","e","preventDefault","onChange","target","name","onSubmit","bind","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","explicit","format","updated_time","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,qC,uLCW5BC,MARf,WACE,OACE,yBAAKC,UAAU,sCACb,0BAAMA,UAAU,gCAAhB,oB,yBCFAC,EAAUC,IAAMC,gBAGhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAO,2BACFF,GADL,IAEEG,WAAYF,EAAOG,QACnBC,QAAS,mBAEb,QACE,OAAOL,IAIAM,EAAb,4MACEN,MAAQ,CACNG,WAAY,GACZE,QAAS,0BACTE,SAAU,SAACN,GAAD,OAAY,EAAKO,UAAS,SAACR,GAAD,OAAWD,EAAQC,EAAOC,QAJlE,kEAQuB,IAAD,OAClBQ,IACGC,IADH,qKAEkKC,qCAE/JC,MAAK,SAACC,GAEL,EAAKL,SAAS,CAAEL,WAAYU,EAAIC,KAAKC,QAAQC,KAAKb,gBAEnDc,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,QAjBlC,+BAqBI,OACE,kBAACtB,EAAQU,SAAT,CAAkBe,MAAOC,KAAKtB,OAC3BsB,KAAKC,MAAMC,cAvBpB,GAA8BC,aA6BjBC,EAAW9B,EAAQ8B,S,iBC7CjB,aACb,OACE,6BACE,yBACEC,IAAKC,IACLC,IAAI,eACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAAaC,QAAS,aC8BhDC,EAnCD,SAACX,GAAU,IAEfY,EAAUZ,EAAVY,MACR,OACE,yBAAKxC,UAAU,YACb,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,aACb,4BAAKwC,EAAMC,aACX,uBAAGzC,UAAU,aACX,gCACE,uBAAGA,UAAU,gBADf,SADF,KAIKwC,EAAME,WACT,6BACA,gCACE,uBAAG1C,UAAU,yBAPjB,KASKwC,EAAMG,YAEX,kBAAC,IAAD,CACEC,GAAE,uBAAkBJ,EAAMK,gBAC1B7C,UAAU,+BAEV,uBAAGA,UAAU,yBAJf,uBCWK8C,E,uKA1BX,OACE,kBAACf,EAAD,MACG,SAACL,GAAW,IACHlB,EAAwBkB,EAAxBlB,WAAYE,EAAYgB,EAAZhB,QAEpB,OADAc,QAAQC,IAAIC,QACOqB,IAAfvC,GAAkD,IAAtBA,EAAWwC,OAElC,kBAACC,EAAD,MAGL,kBAAC,IAAMC,SAAP,KACE,wBAAIlD,UAAU,oBAAoBU,GAClC,yBAAKV,UAAU,OACZQ,EAAW2C,KAAI,SAACC,GAAD,OACd,kBAAC,EAAD,CAAOC,IAAKD,EAAKZ,MAAMc,SAAUd,MAAOY,EAAKZ,oB,GAhB5CV,a,QCgENyB,E,4MAhEblD,MAAQ,CACNmD,WAAY,I,EAGdC,UAAY,SAAC7C,EAAU8C,GACrBA,EAAEC,iBACF7C,IACGC,IADH,qGAEkG,EAAKV,MAAMmD,WAF7G,2DAE0KxC,qCAEvKC,MAAK,SAACC,GACLN,EAAS,CACPL,KAAM,gBACNE,QAASS,EAAIC,KAAKC,QAAQC,KAAKb,aAGjC,EAAKK,SAAS,CAAE2C,WAAY,QAE7BlC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,O,EAGhCqC,SAAW,SAACF,GACV,EAAK7C,SAAL,eAAiB6C,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOnC,S,uDAGlC,IAAD,OACP,OACE,kBAACK,EAAD,MACG,SAACL,GAAW,IACHd,EAAac,EAAbd,SACR,OACE,yBAAKZ,UAAU,2BACb,wBAAIA,UAAU,yBACZ,uBAAGA,UAAU,iBADf,sBAGA,uBAAGA,UAAU,oBAAb,0DAGA,0BAAM+D,SAAU,EAAKN,UAAUO,KAAK,EAAMpD,IACxC,yBAAKZ,UAAU,cACb,2BACEO,KAAK,OACLP,UAAU,+BACViE,YAAY,mBACZH,KAAK,aACLpC,MAAO,EAAKrB,MAAMmD,WAClBI,SAAU,EAAKA,YAGnB,4BACE5D,UAAU,wCACVO,KAAK,UAFP,mB,GAnDKuB,aCSNoC,MATf,WACE,OACE,kBAAC,IAAMhB,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCmESiB,E,4MApEb9D,MAAQ,CACNmC,MAAO,GACP4B,OAAQ,I,kEAGW,IAAD,OAClBtD,IACGC,IADH,gHAE6GY,KAAKC,MAAMyC,MAAMC,OAAOC,GAFrI,mBAEkJvD,qCAE/IC,MAAK,SAACC,GAEL,OADA,EAAKL,SAAS,CAAEuD,OAAQlD,EAAIC,KAAKC,QAAQC,KAAK+C,SACvCtD,IACJC,IADI,yGAE+F,EAAKa,MAAMyC,MAAMC,OAAOC,GAFvH,mBAEoIvD,qCAExIC,MAAK,SAACC,GAEL,EAAKL,SAAS,CAAE2B,MAAOtB,EAAIC,KAAKC,QAAQC,KAAKmB,cAGlDlB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,Q,+BAGtB,IAAD,EACmBI,KAAKtB,MAAvBmC,EADD,EACCA,MAAO4B,EADR,EACQA,OACf,YACYrB,IAAVP,QACWO,IAAXqB,GAC8B,IAA9BI,OAAOC,KAAKjC,GAAOQ,QACY,IAA/BwB,OAAOC,KAAKL,GAAQpB,OAEb,kBAACC,EAAD,MAGL,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,CAAMN,GAAG,IAAI5C,UAAU,+BAAvB,WAGA,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eACXwC,EAAME,WADT,MACwB,IACtB,0BAAM1C,UAAU,kBAAkBwC,EAAMC,cAE1C,yBAAKzC,UAAU,aACb,uBAAGA,UAAU,aAAaoE,EAAOM,eAIrC,wBAAI1E,UAAU,mBACZ,wBAAIA,UAAU,mBACZ,8CADF,KACgCwC,EAAMG,YAGtC,wBAAI3C,UAAU,mBACZ,4CADF,KACiD,IAAnBwC,EAAMmC,SAAiB,KAAO,OAE5D,wBAAI3E,UAAU,mBACZ,gDADF,IACiC,IAC/B,kBAAC,IAAD,CAAQ4E,OAAO,cAAcpC,EAAMqC,qB,GA7D5B/C,aCyBNgD,E,uKApBX,OACE,kBAAC,EAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAM5B,SAAP,KACE,kBAAC,EAAD,MACA,yBAAKlD,UAAU,aACb,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAO+E,OAAK,EAACC,KAAK,IAAIC,UAAWf,IACjC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,oBAAoBC,UAAWd,a,GAZ/CjE,IAAM4B,WCGJoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShB,MACvB,2DCbNiB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5E,MAAK,SAAA6E,GACJA,EAAaC,gBAEdzE,OAAM,SAAA0E,GACLxE,QAAQwE,MAAMA,EAAM5E,c","file":"static/js/main.2ea9cdeb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.26ef8bb4.gif\";","//Navbar component\r\nimport React from \"react\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-primary mb-5\">\r\n      <span className=\"navbar-brand mb-0 h1 mx-auto\">Lyric Searcher</span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","// To define context so that states can be used across components\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\n// Reducer function\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SEARCH_TRACKS\":\r\n      return {\r\n        ...state,\r\n        track_list: action.payload,\r\n        heading: \"Search Results\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    track_list: [],\r\n    heading: \"Top 10 Tracks in the US\",\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)), // Dispatch function is to add a reducer so that the state can be modified\r\n  };\r\n\r\n  // The get request to obtain tracklist from musixmatch. https://cors-anywhere.herokuapp.com/ acts as a proxy server to bypass cors blocking\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${process.env.REACT_APP_MX_KEY}`\r\n      )\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        this.setState({ track_list: res.data.message.body.track_list });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","// Spinner component to display spinner gif\r\nimport React from \"react\";\r\nimport spinner from \"./spinner.gif\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        alt=\"loading.....\"\r\n        style={{ width: \"200px\", margin: \"40px auto\", display: \"block\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// Track component for each Track\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Track = (props) => {\r\n  // props from Tracks.js\r\n  const { track } = props; // destructuring track details from props\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n          <h5>{track.artist_name}</h5>\r\n          <p className=\"card-text\">\r\n            <strong>\r\n              <i className=\"fas fa-play\"></i>Track\r\n            </strong>\r\n            : {track.track_name}\r\n            <br />\r\n            <strong>\r\n              <i className=\"fas fa-compact-disc\"></i>\r\n            </strong>\r\n            : {track.album_name}\r\n          </p>\r\n          <Link\r\n            to={`lyrics/track/${track.commontrack_id}`}\r\n            className=\"btn btn-secondary btn-block\"\r\n          >\r\n            <i className=\"fas fa-chevron-right\"></i>&nbsp;View Lyrics\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//Proptypes\r\nTrack.propTypes = {\r\n  track: PropTypes.object.isRequired,\r\n};\r\nexport default Track;\r\n","// Tracks component to update tracklist\r\nimport React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport Track from \"./Track\";\r\n\r\n// The Consumer component is imported from context. It provides access to the shared state which is passes as a \"value\" prop from context.js\r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { track_list, heading } = value; //Destructuring tracklist and heading from value\r\n          console.log(value);\r\n          if (track_list === undefined || track_list.length === 0) {\r\n            //checking to see if array loaded or not. If not show spinner gif.\r\n            return <Spinner />;\r\n          } else {\r\n            return (\r\n              <React.Fragment>\r\n                <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                <div className=\"row\">\r\n                  {track_list.map((item) => (\r\n                    <Track key={item.track.track_id} track={item.track} /> // For each track display a track component\r\n                  ))}\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","// Search component for searching for a particular song\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Search extends Component {\r\n  // State to hold user input\r\n  state = {\r\n    trackTitle: \"\",\r\n  };\r\n\r\n  findTrack = (dispatch, e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MX_KEY}`\r\n      )\r\n      .then((res) => {\r\n        dispatch({\r\n          type: \"SEARCH_TRACKS\",\r\n          payload: res.data.message.body.track_list,\r\n        });\r\n\r\n        this.setState({ trackTitle: \"\" });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-4 p-4\">\r\n              <h1 className=\"display-4 text-center\">\r\n                <i className=\"fas fa-music\"></i> Search for a Song\r\n              </h1>\r\n              <p className=\"lead text-center\">\r\n                Get the lyrics for any song in the musixmatch database\r\n              </p>\r\n              <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter Song Title\"\r\n                    name=\"trackTitle\"\r\n                    value={this.state.trackTitle}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-primary btn-lg btn-block mb-5\"\r\n                  type=\"submit\"\r\n                >\r\n                  Search\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","//The Index component will hold all other components\r\nimport React from \"react\";\r\nimport Tracks from \"../tracks/Tracks\";\r\nimport Search from \"../tracks/Search\";\r\n\r\nfunction Index() {\r\n  return (\r\n    <React.Fragment>\r\n      <Search />\r\n      <Tracks />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","// Component to display lyrics for a song\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\"; // Moment package to use with React. Install both react-moment and moment. Easy handling of date and time properties\r\nclass Lyrics extends Component {\r\n  // State to store track info and lyrics\r\n  state = {\r\n    track: {},\r\n    lyrics: {},\r\n  };\r\n  // Requests to get lyrics and Track info\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?commontrack_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MX_KEY}`\r\n      )\r\n      .then((res) => {\r\n        this.setState({ lyrics: res.data.message.body.lyrics });\r\n        return axios\r\n          .get(\r\n            `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?commontrack_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MX_KEY}`\r\n          )\r\n          .then((res) => {\r\n            //console.log(res.data);\r\n            this.setState({ track: res.data.message.body.track });\r\n          });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    const { track, lyrics } = this.state;\r\n    if (\r\n      track === undefined ||\r\n      lyrics === undefined ||\r\n      Object.keys(track).length === 0 ||\r\n      Object.keys(lyrics).length === 0\r\n    ) {\r\n      return <Spinner />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <Link to=\"/\" className=\"btn btn-primary btn-sm mb-4\">\r\n            Go Back\r\n          </Link>\r\n          <div className=\"card\">\r\n            <h5 className=\"card-header\">\r\n              {track.track_name} by{\" \"}\r\n              <span className=\"text-secondary\">{track.artist_name}</span>\r\n            </h5>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <ul className=\"list-group mt-3\">\r\n            <li className=\"list-group-item\">\r\n              <strong>Album Name</strong>: {track.album_name}\r\n            </li>\r\n\r\n            <li className=\"list-group-item\">\r\n              <strong>Explicit</strong>: {track.explicit === 0 ? \"No\" : \"Yes\"}\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <strong>Release Date</strong>:{\" \"}\r\n              <Moment format=\"DD/MM/YYYY\">{track.updated_time}</Moment>\r\n            </li>\r\n          </ul>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Index from \"./components/layout/Index\";\nimport Lyrics from \"./components/tracks/Lyrics\";\n\nimport { Provider } from \"./context\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider>\n        {/* Everything needs to wrapped in provider because of the context sharing. All components sharing states need to be wrapped*/}\n        <Router>\n          <React.Fragment>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                {/*Switch to surround all routes */}\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}